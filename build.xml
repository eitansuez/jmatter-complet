<project name="jmatter-distributor" default="make-distro-and-checksums">

  <description>This build file produces official JMatter distributions</description>

  <property name="build.dir" location="build" />
  <property name="dist.dir" location="dist" />
  <property name="build.target.dir" location="${build.dir}/jmatter" />
  
  <property name="jmatter.dir" location="${basedir}/jmatter" />
  <property name="demo.dir" location="${basedir}/demo-apps" />
  <property name="modules.dir" location="${basedir}/modules" />

  <!-- TARGETS -->

  <target name="init">
    <tstamp />
    <mkdir dir="${build.target.dir}" />
    <mkdir dir="${dist.dir}" />
    <uptodate property="pdfdoc-exists" srcfile="${jmatter.dir}/doc/guide.lyx" targetfile="${jmatter.dir}/doc/guide.pdf" />
  </target>
 
  <target name="clean">
    <delete dir="${build.dir}" />
  </target>

  <target name="update-modules" 
          description="rebuild/update modules code (copies jars to framework lib dir)">
   <ant antfile="${modules.dir}/ds-swing/build.xml" inheritAll="false">
     <target name="clean" />
     <target name="jar" />
   </ant>
   <ant antfile="${modules.dir}/ds-wizard/build.xml" inheritAll="false">
     <target name="clean" />
     <target name="jar" />
   </ant>
   <copy todir="${jmatter.dir}/lib/src">
    <fileset dir="${modules.dir}/ds-swing/dist" includes="ds-swing.jar" />
    <fileset dir="${modules.dir}/ds-wizard/dist" includes="ds-wizard.jar" />
   </copy>
  </target>

   <target name="clean-subprojects" description="invoke clean target on jmatter and demo apps">
      <ant antfile="${demo.dir}/ContactMgr/build.xml" inheritAll="false" target="clean"/>
      <ant antfile="${demo.dir}/IssueMgr/build.xml" inheritAll="false" target="clean"/>
      <ant antfile="${demo.dir}/Sympster/build.xml" inheritAll="false" target="clean"/>
      <ant antfile="${demo.dir}/MovieLib/build.xml" inheritAll="false" target="clean"/>
      <ant antfile="${demo.dir}/MyTunes/build.xml" inheritAll="false" target="clean"/>
      <ant antfile="${demo.dir}/CustomUI/build.xml" inheritAll="false" target="clean"/>
      <!-- ensure to produce and include a binary in the distribution -->
      <ant antfile="${jmatter.dir}/build.xml" inheritAll="false" target="cleanjar"/>
      <!-- then get rid of artifacts -->
      <ant antfile="${jmatter.dir}/build.xml" inheritAll="false" target="clean"/>
   </target>

   <target name="makedoc-pdf" unless="pdfdoc-exists"
          description="produce pdf documentation (if necessary)">
    <exec dir="${jmatter.dir}/doc" executable="lyx-qt">
      <arg line="--export dvi guide.lyx" />
    </exec>
    <exec dir="${jmatter.dir}/doc" executable="dvipdfm">
      <arg line="guide.dvi" />
    </exec>
  </target>

  <target name="preliminaries" 
          depends="clean, init, update-modules, clean-subprojects, makedoc-pdf" />

  <target name="make-distribution" 
          description="Produce source distribution" 
          depends="preliminaries">

   <copy todir="${build.target.dir}" >
     <fileset dir="${jmatter.dir}" includes="doc/Changes,doc/Credits,doc/guide.pdf,doc/jMatter-license" />
     <fileset dir="${jmatter.dir}" includes="build.xml" />
     <fileset dir="${jmatter.dir}" includes="src/**/*" />
     <fileset dir="${jmatter.dir}" includes="test/**/*" />
     <fileset dir="${jmatter.dir}" includes="lib/**/*.jar" />
     <fileset dir="${jmatter.dir}" includes="resources/**/*" />
     <fileset dir="${jmatter.dir}" includes="dist/**/*" /> <!-- precompiled binary -->
   </copy>
   
   <exec dir="${jmatter.dir}/doc" executable="markdown" output="${build.target.dir}/doc/jMatter-License.html">
     <arg line="jMatter-License" />
   </exec>

   <copy todir="${build.dir}">
     <fileset dir="." includes="demo-apps/**/*" />
   </copy>

   <!-- how can i create a property whose 
        name is dynamically computed based on ${DSTAMP}? -->
   <mkdir dir="${build.dir}/jmatter-${DSTAMP}" />
   <move todir="${build.dir}/jmatter-${DSTAMP}">
      <fileset dir="${build.dir}" excludes="jmatter-${DSTAMP}" />
   </move>
   <zip basedir="${build.dir}" destfile="${dist.dir}/jmatter-${DSTAMP}.zip" />
   <tar basedir="${build.dir}" destfile="${dist.dir}/jmatter-${DSTAMP}.tgz" compression="gzip" />

  </target>


  <target name="checksum-all" description="generate checksum files for distributions">
    <antcall target="checksum">
      <param name="algorithm" value="MD5" />
    </antcall>
    <antcall target="checksum">
      <param name="algorithm" value="SHA-1" />
    </antcall>
  </target>

  <target name="checksum">
    <checksum algorithm="${algorithm}">
      <fileset dir="${dist.dir}" includes="*.tgz, *.zip" />
    </checksum>
  </target>
  
  <target name="make-distro-and-checksums" depends="make-distribution,checksum-all" 
     description="construct jmatter distributions and corresponding checksums" />

</project>

